ALERT ElasticUp
  IF elasticsearch_cluster_health_up != 1
  FOR <%= p('elasticsearch_alerts.cluster_down.evaluation_time') %>
  LABELS {
    service = "elasticsearch",
    severity = "critical",
  }
  ANNOTATIONS {
    summary = "Elasticsearch instance {{$labels.instance}} is not responding",
    description = "Elasticsearch instance {{$labels.instance}} is not responding",
  }

ALERT ElasticClusterRed
  IF elasticsearch_cluster_health_status{color="red"} == 1
  FOR <%= p('elasticsearch_alerts.cluster_red.evaluation_time') %>
  LABELS {
    service = "elasticsearch",
    severity = "critical",
  }
  ANNOTATIONS {
    summary = "Cluster {{$labels.cluster}} is red",
    description = "Cluster {{$labels.cluster}} is red",
  }

<% if_p('elasticsearch_alerts.cluster_yellow.evaluation_time') do |time| %>
ALERT ElasticClusterYellow
  IF elasticsearch_cluster_health_status{color="yellow"} == 1
  FOR <%= time %>
  LABELS {
    service = "elasticsearch",
    severity = "warning",
  }
  ANNOTATIONS {
    summary = "Cluster {{$labels.cluster}} is yellow",
    description = "Cluster {{$labels.cluster}} is yellow",
  }
<% end %>

ALERT ElasticHeapUsage
  IF elasticsearch_jvm_memory_used_bytes{area="heap"} / elasticsearch_jvm_memory_max_bytes{area="heap"} > <%= p('elasticsearch_alerts.heap_usage.threshold') %>
  FOR <%= p('elasticsearch_alerts.heap_usage.evaluation_time') %>
  LABELS {
    service = "elasticsearch",
    severity = "warning",
  }
  ANNOTATIONS {
    summary = "Heap usage on node `{{$labels.cluster}}/{{$labels.name}}` has been over <%= p('elasticsearch_alerts.heap_usage.threshold') %> for a long time",
    description = "Heap usage on node `{{$labels.cluster}}/{{$labels.name}}` has been over <%= p('elasticsearch_alerts.heap_usage.threshold') %> for <%= p('elasticsearch_alerts.heap_usage.evaluation_time') %>",
  }
